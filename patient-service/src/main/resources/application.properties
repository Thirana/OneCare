# spring.application.name=patient-service

# # --- PostgreSQL Configuration (Dockerized) ---
# spring.datasource.url=${SPRING_DATASOURCE_URL}
# spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
# spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
# spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
# spring.sql.init.mode=${SPRING_SQL_INIT_MODE}

# # Optional: Let Spring auto-detect the dialect (or set explicitly if you prefer)
# # spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# # --- Server Port ---
# server.port=4000

# # --- Logging ---
# logging.level.root=info

spring.application.name=patient-service

# H2 DB setup
spring.h2.console.path=/h2-console
spring.datasource.url=jdbc:h2:mem:patientdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=admin_viewer
spring.datasource.password=password

# JPA settings
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.defer-datasource-initialization=true

# Ensure SQL runs after schema
spring.sql.init.mode=always

# Port & Logging
server.port=3000
logging.level.root=info

# Eureka Client
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.lease-renewal-interval-in-seconds=10
eureka.instance.lease-expiration-duration-in-seconds=20
eureka.instance.instance-id=${spring.application.name}:${server.port}
